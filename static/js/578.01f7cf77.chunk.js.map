{"version":3,"file":"static/js/578.01f7cf77.chunk.js","mappings":"yNAwBaA,GAAMC,EAAAA,EAAAA,IAfE,SAAHC,GAAA,IAAMC,EAAOD,EAAPC,QAAmBC,GAAFF,EAARG,SAAmBH,EAATE,WAAWE,EAAQJ,EAARI,SAAQ,OAC5DC,EAAAA,EAAAA,KAAA,OAAKJ,QAASA,EAASC,UAAWA,EAAUE,SACzCA,GACG,GAYWL,CAAoBO,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6BACxB,SAACC,GAAK,OAAKA,EAAMC,QAAQ,IAG3BC,GAAaX,EAAAA,EAAAA,IAzBV,SAAHY,GAAA,IAAMT,EAASS,EAATT,UAAWU,EAACD,EAADC,EAAGC,EAACF,EAADE,EAAGC,EAAOH,EAAPG,QAAO,OACzCT,EAAAA,EAAAA,KAAA,QAAMO,EAAGA,EAAGC,EAAGA,EAAGX,UAAS,cAAAa,OAAgBb,GAAYE,SACpDU,GACI,GAsBiBf,CAAeiB,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,+IAQ5BU,GAAalB,EAAAA,EAAAA,IArBX,SAAHmB,GAAA,IACVC,EAAYD,EAAZC,aAEAjB,GADWgB,EAAXE,YACSF,EAAThB,WACKgB,EAALG,MACMH,EAANI,OACKJ,EAALK,MAAK,OACDlB,EAAAA,EAAAA,KAAA,OAAKmB,UAAS,IAAAT,OAAMI,GAAgBjB,UAAWA,GAAc,GAczCH,CAAc0B,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,gdAC5B,SAACC,GACT,OAAIA,EAAMa,MACDb,EAAMY,YAAcM,EAAAA,EAAQC,QAAQC,KAAOF,EAAAA,EAAQG,QAAQC,EAGhEtB,EAAMc,OACDd,EAAMY,YAAcM,EAAAA,EAAQC,QAAQC,KAAOF,EAAAA,EAAQG,QAAQE,EAG7DvB,EAAMY,YAAcM,EAAAA,EAAQC,QAAQC,KAAOF,EAAAA,EAAQG,QAAQG,CACpE,IC3CIC,EACG,SADHA,EAEI,SAsCV,EAnCoB,WAClB,IAAQb,GAAgBc,EAAAA,EAAAA,KAAhBd,YAEFD,EAAe,aAErB,OACEd,EAAAA,EAAAA,KAAA,WAASH,UAAU,yCAAyC,WAAS,UAASE,UAC5E+B,EAAAA,EAAAA,MAACrC,EAAG,CAACG,QAAQ,eAAeQ,SAAS,SAASP,UAAU,UAASE,SAAA,EAC/D+B,EAAAA,EAAAA,MAAA,UAAQC,GAAIjB,EAAaf,SAAA,EACvBC,EAAAA,EAAAA,KAACK,EAAU,CAACI,QAASmB,EAAYrB,EAAE,MAAMC,EAAE,SAC3CR,EAAAA,EAAAA,KAACK,EAAU,CAACI,QAASmB,EAAarB,EAAE,MAAMC,EAAE,YAG9CsB,EAAAA,EAAAA,MAAA,KAAA/B,SAAA,EACEC,EAAAA,EAAAA,KAACY,EAAU,CACTG,YAAaA,EACbD,aAAcA,EACdE,OAAK,KAEPhB,EAAAA,EAAAA,KAACY,EAAU,CACTG,YAAaA,EACbD,aAAcA,EACdG,QAAM,KAERjB,EAAAA,EAAAA,KAACY,EAAU,CACTG,YAAaA,EACbD,aAAcA,EACdI,OAAK,WAMjB,C","sources":["components/animations/IMakeThings/component.js","components/animations/IMakeThings/index.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { colours } from \"../../../styles/colours\";\n\nconst svgText = ({ className, x, y, message }) => (\n  <text x={x} y={y} className={`symbolText ${className}`}>\n    {message}\n  </text>\n);\n\nconst svgContainer = ({ viewBox, maxMidth, className, children }) => (\n  <svg viewBox={viewBox} className={className}>\n    {children}\n  </svg>\n);\n\nconst svgUse = ({\n  symbolTextID,\n  minimalMode,\n  className,\n  first,\n  second,\n  third,\n}) => <use xlinkHref={`#${symbolTextID}`} className={className} />;\n\nexport const Svg = styled(svgContainer)`\n  max-width: ${(props) => props.maxWidth};\n`;\n\nexport const SymbolText = styled(svgText)`\n  text-anchor: middle;\n  font-family: \"Major Mono Display\";\n  text-transform: lowercase;\n  font-size: 9em;\n  font-weight: bold;\n`;\n\nexport const MovingText = styled(svgUse)`\n  stroke: ${(props) => {\n    if (props.first) {\n      return props.minimalMode ? colours.minimal.dark : colours.vibrant.a;\n    }\n\n    if (props.second) {\n      return props.minimalMode ? colours.minimal.dark : colours.vibrant.b;\n    }\n\n    return props.minimalMode ? colours.minimal.dark : colours.vibrant.c;\n  }};\n  fill: none;\n  stroke-dasharray: 15% 30%;\n  stroke-width: 4px;\n  stroke-linecap: round;\n  animation: 5s ease-in-out infinite stroke-offset;\n\n  :nth-of-type(1) {\n    stroke-dashoffset: 15%;\n  }\n\n  :nth-of-type(2) {\n    stroke-dashoffset: 30%;\n  }\n\n  :nth-of-type(3) {\n    stroke-dashoffset: 45%;\n  }\n\n  @keyframes stroke-offset {\n    75% {\n      stroke-dashoffset: 45%;\n      stroke-dasharray: 0 112.5%;\n    }\n  }\n`;\n","import React from \"react\";\nimport { usePortfolioContext } from \"../../../context\";\nimport { MovingText, Svg, SymbolText } from \"./component\";\n\nconst copy = {\n  iMake: \"I MAKE\",\n  things: \"THINGS\",\n};\n\nconst IMakeThings = () => {\n  const { minimalMode } = usePortfolioContext();\n\n  const symbolTextID = \"symbolText\";\n\n  return (\n    <section className=\"p-3 p-md-5 max-width-full mt-5 mt-md-0\" data-aos=\"fade-up\">\n      <Svg viewBox=\"0 0 1000 400\" maxWidth='1250px' className='mx-auto'>\n        <symbol id={symbolTextID}>\n          <SymbolText message={copy.iMake} x=\"50%\" y=\"40%\" />\n          <SymbolText message={copy.things} x=\"50%\" y=\"80%\" />\n        </symbol>\n\n        <g>\n          <MovingText\n            minimalMode={minimalMode}\n            symbolTextID={symbolTextID}\n            first\n          />\n          <MovingText\n            minimalMode={minimalMode}\n            symbolTextID={symbolTextID}\n            second\n          />\n          <MovingText\n            minimalMode={minimalMode}\n            symbolTextID={symbolTextID}\n            third\n          />\n        </g>\n      </Svg>\n    </section>\n  );\n};\n\nexport default IMakeThings;\n"],"names":["Svg","styled","_ref2","viewBox","className","maxMidth","children","_jsx","_templateObject","_taggedTemplateLiteral","props","maxWidth","SymbolText","_ref","x","y","message","concat","_templateObject2","MovingText","_ref3","symbolTextID","minimalMode","first","second","third","xlinkHref","_templateObject3","colours","minimal","dark","vibrant","a","b","c","copy","usePortfolioContext","_jsxs","id"],"sourceRoot":""}